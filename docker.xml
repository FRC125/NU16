<?xml version="1.0" encoding="UTF-8"?>

<project name="WPILib Installation" default="install">

    <!-- Set this to the same value that's in build.xml -->

    <property name="wpilib" value="lib/wpilib" />
    <target name="install" depends="doInstall, isInstalled"/>

    <target name="doInstall" depends="wpilib.check" unless="wpilib.exists">
        <mkdir dir="${wpilib}"/>
        <get src="http://first.wpi.edu/FRC/roborio/release/eclipse/plugins/edu.wpi.first.wpilib.plugins.java_0.1.0.201603020231.jar"
             dest="${wpilib}/plugin.jar"/>
        <unzip src="${wpilib}/plugin.jar" dest="${wpilib}">
            <patternset>
                <include name="resources/java.zip"/>
            </patternset>
            <mapper type="flatten"/>
        </unzip>
        <delete file="${wpilib}/plugin.jar" />
        <unzip src="${wpilib}/java.zip" dest="${wpilib}"/>
        <delete file="${wpilib}/java.zip" />
    </target>

    <target name="isInstalled" depends="wpilib.check" if="wpilib.exists">
        <echo>WPILib is installed</echo>
    </target>

    <target name="wpilib.check">
        <condition property="wpilib.exists">
            <available file="${wpilib}" type="dir"/>
        </condition>
    </target>


    <property file="build.properties"/>
    <property file="lib/wpilib/ant/build.properties"/>


    <import file="${wpilib.ant.dir}/build.xml"/>
    <property name="test.dir" value="test" />

     <path id="classpath.test">
       <pathelement location="lib/junit-4.12.jar" />
       <pathelement location="lib/hamcrest-core-1.3.jar" />
     </path>

     <target name="test" depends="clean,compile" description="Compile source code and run all junit tests.">
       <javac srcdir="${test.dir}" destdir="${build.dir}" includeantruntime="false" debug="on">
           <classpath refid="classpath.test"/>
       </javac>
       <junit haltonfailure="yes">
           <classpath>
             <path refid="classpath.test" />
             <pathelement location="${build.dir}"/>
           </classpath>
           <formatter type="plain" usefile="false" />
           <batchtest>
               <fileset dir="${test.dir}" includes="**/*Test*.java" />
           </batchtest>
       </junit>
     </target>
</project>
